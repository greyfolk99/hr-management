buildscript{
	ext	{
		queryDslVersion = "5.0.0"
	}
}

plugins {
	id 'org.springframework.boot' version '2.6.13'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id 'java'
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'com'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly { extendsFrom annotationProcessor }

	// logback 의존성 제거
	// Spring Boot에는 logback이 기본 logging이기 때문에 의존성을 제거한다.
	all { exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging' }
}
repositories { mavenCentral() }
dependencies {
	//Spring Boot Related
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	//JUnit4
	testImplementation 'junit:junit:4.13.2'
	//MySQL
	implementation 'mysql:mysql-connector-java'
	//Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	//QueryDsl
	implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
	implementation "com.querydsl:querydsl-apt:${queryDslVersion}"
	//객체 Mapper
	implementation 'org.mapstruct:mapstruct:1.5.3.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final'
	//enum 버그 제거
	implementation 'com.google.code.findbugs:jsr305:3.0.2'
	//log4j2
	implementation 'org.springframework.boot:spring-boot-starter-log4j2' // 의존성 주입
	//swagger
	implementation group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.9.2'
	implementation group: 'io.springfox', name: 'springfox-swagger2', version: '2.9.2'
}
tasks.named('test') { useJUnitPlatform() }
def querydslDir = "$buildDir/generated/querydsl"
querydsl{
	jpa = true
	querydslSourcesDir = querydslDir
}
sourceSets{ main.java.srcDir querydslDir }
compileQuerydsl{ options.annotationProcessorPath = configurations.querydsl }
configurations{
	compileOnly{ extendsFrom annotationProcessor }
	querydsl.extendsFrom compileClasspath
}

